1. Что подразумевается под тестовой средой?

Тестовая среда -это отдельное окружение, где можно спокойно проверять доработанный или новосозданный функционал, и не боятся что ошибки попадут к конечному пользователю. Тестовая среда зачастую считается банальной копией рабочего окружения, которая не видна конечному пользователю, но максимально похожа на конечную версию продукта. 


2. В отличие build от release?

Build это сборка проекта, которая передается тестировщикам для тестирования внутри компании. 
Release это сборка которая передается непосредственно заказчику. 

3. Основные фазы тестирования? 

Pre-Alfa

[Начальная стадия разработки. Со старта до выхода стадии Alfa. Тут происходит разработка дизайна, анализ требований и тд.)]

Alfa

[Внутренняя разработка. Стадия начала тестирования программы в целом, как правило внутри организации.
Можно менять, добавлять функционал]

Beta

[Общественная разработка. Стадия активного beta -тестирования и отладки программы. На этом уровне могут быть использованы другими разработчиками ПО]

Release candidate

[Предварительная версия. Кандидат на то, чтобы стать стабильной]

Release to manifacturing 

[Выпуск в производство. Готовность к тиражированию]

4.
5.
6.
7.

8. Что такое тестирование со сдвигом влево? 

Тестирование, при котором тестирование проводится на более ранней стадии жизненного цикла(т.е. перемещается влево на временной шкале проекта) 

9. Почему тестирование делится на отдельные этапы?

-Каждый этап испытаний имеет свое назначение 
-Проще управлять поэтапно 
-Мы можем запустить разные тесты в разных средах 
-Производительность и качество тестирования улучшаются с помощью поэтапного тестирования 

11. Как вы тестируете продукт, если требования еще не зафиксированы?

12. Как вы узнаете, было ли создано достаточно тестов для тестирования продукта?

Прежде всего, мы проверим, охватывает ли каждое требование хотя бы один Test case. Если да, то можно сказать, что тестовых примеров достаточно для тестирования продукта. 

 


14. Что такое beta тестирование? 

Это интенсивное использование почти готовой версии продукта, с целью выявления максимального числа ошибок в его работе для их последующего устранения перед окончательным выходом продукта на рынок, к массовому потребителю. С привличением добровольцев. 

Закрытое beta тестирование - это когда мы даем ссылку на скачку приложения, только конкретным пользователям. 

Открытое beta тестирование - когда выкатываем в открытый доступ. Кто захотел - скачал, потестировал, проверил. 
Не контролируем список тестировщиков. 

19. Методы тестирования?

метод "Чёрного ящика" (Black box testing) - когда нет доступа к коду
метод "Белого ящика" (White box or «glass-box» testing) - когда есть доступ к коду
метод "Серого ящика" (Grey box) - когла есть частичный доступ к коду (консоль браузера)

23.	Что подразумевается под интеграционным тестированием?

Направлено на проверку взаимодействия между несколькими частями приложения(каждая из которых в свою очередь проверена отдельно, на стадии модульного/юнит тестирования). 

24.	Разница между Unit testing и Integration testing?

Unit testing направлено на проверку небольших частей приложения, которые как правило, можно исследовать изолированно от других подобных частей.  
А Integration testing направлено непосредственно на тестирование взаимодействия между этими юнитами.

27.	Что подразумевается под системным тестированием?

Направлено на проверку всего приложения как единого целого, собранного из частей, проверенных на двух предыдущих стадиях(модульное и интеграционное).

29.	Что такое тестирование совместимости/взаимодействия? (Compatibility/Interoperability testing)

Тестирование взаимодействия(Interoperability testing) - это функциональное тестирование, проверяющее способность приложения взаимодействовать с одним и более компонентами или системами и включающее в себя тестирование Совместимости(Compatibility testing) и Интергационное тестирование(Integration testing).

31.	Что такое нефункциональное тестирование?

Нефункциональное тестирование направлено на проверку нефункциональных особенностей(удобство пользователя, совместимость, производительность, безопастность и тд.)

В целом это тестирование того 'Как система работает?'

Делится на:

-тестирование производительности:
нагрузочное
стрессовое
тестирование стабильности и надежности
объемное тестирование

-тестирование установки
-тестировнаие удобства пользования
-тестирование на отказ и восстановление
-конфигурационное

42. Объясните, что такое тестирование N+1?
Вариант регрессионного тестирования представлен как N+1. 
В этом методе тестирование выполняется в несколько циклов, в которых ошибки, обнаруженные в тестовом цикле «N», устраняются и повторно тестируются в тестовом цикле N + 1. 
Цикл повторяется, пока не будет найдено ни одной ошибки.



50. Что такое параллельное тестирование? (Parallel testing)

Тестирование, при котором одни и те же входные данные вводятся в двух разных версиях приложения и сообщают об аномалиях. 
Гарантирует, что новая версия приложения работает правильно. 
Обеспечивает совпадение и несоответсвие между старой и новой версией. 

51. Чем AdHock тестирование отличается от Исследовательского тестирования?

При AdHoc тестировании ты ничего не знаешь о проекте, и нет документации.

Если есть хоть какая-то документация, ты знаешь проект, ты его тестируешь и тебе просто надо поюзать проект и найти какие-то баги, которые уже не ловятся при проверке на соотвествие документации.
И нужно отловить непредусмотренные варианты это -исследовательское тестирование. 
 

 

